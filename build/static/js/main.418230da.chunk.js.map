{"version":3,"sources":["spotify.js","login/Login.js","data/DataLayer.js","player/sidebar/partials/SidebarOption.js","weather/GeoLocation.js","player/sidebar/Sidebar.js","player/body/partials/SearchBox.js","player/body/partials/Header.js","data/SoundLayer.js","player/body/partials/SongRow.js","player/body/Body.js","player/footer/Footer.js","player/Player.js","App.js","serviceWorker.js","data/reducer.js","data/soundReducer.js","index.js"],"names":["authEndpoint","redirectUrl","window","location","origin","clientId","scopes","loginUrl","join","Login","className","src","alt","href","DataLayerContext","createContext","DataLayer","initialState","reducer","children","Provider","value","useReducer","useDataLayerValue","useContext","SidebarOption","spotify","title","id","Icon","dispatch","onClick","e","type","getPlaylistTracks","then","response","tracks","changePlaylist","GeoLocation","state","lat","undefined","lon","city","temperatureC","temperatureF","icon","errorMessage","getPosition","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","getWeather","latitude","longitude","a","fetch","api_call","json","data","setState","name","Math","round","main","temp","weather","this","position","coords","catch","err","message","timeID","setInterval","clearInterval","Component","Sidebar","playlists","useState","price","productBy","product","setProduct","HomeIcon","Player","LibraryMusicIcon","items","map","playlist","key","stripeKey","token","SearchBox","placeholder","handleChange","onChange","Header","user","Avatar","images","url","display_name","SoundLayerContext","SoundLayer","useSoundLayerValue","SongRow","track","playing","repeat","soundDispatch","wasPlaying","audio","Audio","preview_url","loop","document","artists","artist","changeTrack","album","Body","current_playlist","volume","description","fontSize","Footer","shuffle","setRepeat","setShuffle","onended","randomTrackNumber","floor","random","length","randomTrack","Grid","container","spacing","item","xs","Slider","aria-labelledby","valueLabelDisplay","event","min","max","SpotifyWebApi","App","useEffect","hash","substring","split","reduce","initial","parts","decodeURIComponent","_token","setAccessToken","getMe","getUserPlaylists","Boolean","hostname","match","action","currentPlaylist","forEach","soundReducer","play","pause","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","registration","unregister","error","console"],"mappings":"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","file":"static/js/main.418230da.chunk.js","sourcesContent":["//https://developer.spotify.com/documentation/web-playback-sdk/quick-start/\r\n\r\nexport const authEndpoint = 'https://accounts.spotify.com/authorize';\r\n\r\nconst redirectUrl = window.location.origin + '/'; //where are you running your app (local react by default is http://localhost:3000/\r\nconst clientId = 'd3384f96a6054701a7cf023eb714c440'; // clintId you can get at https://developer.spotify.com/dashboard\r\n\r\n/**\r\n * You can read more about Spotify scopes at https://developer.spotify.com/documentation/general/guides/scopes/\r\n */\r\nconst scopes = [\r\n    'user-read-currently-playing',\r\n    'user-read-recently-played',\r\n    'user-read-playback-state',\r\n    'user-top-read',\r\n    'user-modify-playback-state'\r\n];\r\n\r\nexport const loginUrl = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUrl}&scopes=${scopes.join('%20')}&response_type=token&show_dialog=true`;\r\n\r\nexport const logoutUrl =`${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUrl}&scopes=${scopes.join('%20')}&response_type=token&show_dialog=true`\r\n\r\nexport const getAccessTokenFromUrl = () => {\r\n    return window.location.hash\r\n        .substring(1)\r\n        .split('&')\r\n        .reduce((initial, item) => {\r\n            let parts = item.split('=');\r\n            initial[parts[0]] = decodeURIComponent(parts[1]);\r\n            return initial\r\n        }, {});\r\n};","import React from 'react'\r\nimport './Login.css';\r\nimport { loginUrl } from '../spotify'\r\n\r\nfunction Login() {\r\n    return (\r\n        <div className=\"login\">\r\n            <img\r\n                src=\"https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg\"\r\n                alt=\"\"/>\r\n            <a href={ loginUrl }>Login with Spotify Clone</a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login","import React, {createContext, useContext, useReducer} from 'react';\r\n\r\nexport const DataLayerContext = createContext();\r\n\r\nexport const DataLayer = ({initialState, reducer, children}) => (\r\n    <DataLayerContext.Provider value={useReducer(reducer, initialState)}>\r\n        {children}\r\n    </DataLayerContext.Provider>\r\n);\r\n\r\nexport const useDataLayerValue = () => useContext(DataLayerContext);","import React from 'react'\r\nimport './SidebarOption.css'\r\nimport {useDataLayerValue} from '../../../data/DataLayer';\r\n\r\nfunction SidebarOption({spotify, title, id, Icon}) {\r\n    const [{}, dispatch] = useDataLayerValue();\r\n\r\n    const changePlaylist = (id, e) => {\r\n        dispatch({\r\n            type: 'SET_CURRENT_PLAYLIST',\r\n            id: id\r\n        });\r\n\r\n        spotify.getPlaylistTracks(id).then((response) => {\r\n            dispatch({\r\n                type: 'SET_TRACKS',\r\n                tracks: response\r\n            })\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className='sidebarOption'>\r\n            {Icon && <Icon className='sidebarOption__icon'/>}\r\n            {Icon ? <h4>{title}</h4> : <p onClick={(e) => changePlaylist(id, e)}>{title}</p>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SidebarOption","import React, { Component } from 'react';\r\n// import './GeoLocation.css'\r\n\r\nclass GeoLocation extends Component {\r\n    state = {\r\n        lat: undefined,\r\n        lon: undefined,\r\n        city: undefined,\r\n        temperatureC: undefined,\r\n        temperatureF: undefined,\r\n        icon: undefined,\r\n        errorMessage: undefined\r\n    }\r\n\r\n    getPosition =() => {\r\n        return new Promise (function (resolve, reject){\r\n            navigator.geolocation.getCurrentPosition(resolve, reject)\r\n        })\r\n    }\r\n\r\n    getWeather = async (latitude, longitude) => {\r\n        const api_call = await fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=a8ad87d117297e38c24b75a8ff1f512b&units=metric`)\r\n        const data = await api_call.json();\r\n        this.setState({\r\n            lat: latitude,\r\n            lon: longitude,\r\n            city: data.name,\r\n            temperatureC: Math.round(data.main.temp),\r\n            temperatureF: Math.round(data.main.temp * 1.8 + 32),\r\n            icon: data.weather[0].icon,\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getPosition()\r\n         .then((position) => {\r\n             this.getWeather(position.coords.latitude, position.coords.longitude)\r\n         })\r\n        .catch((err) => {\r\n            this.setState({ errorMessage: err.message });\r\n        });\r\n\r\n        this.timeID = setInterval(\r\n            () => this.getWeather(this.state.lat, this.state.lon),\r\n            60000\r\n        )\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            clearInterval(this.timeID)\r\n        }\r\n\r\n        render() {\r\n            const { city, temperatureC, temperatureF, icon} = this.state\r\n            if(city) {\r\n                return (\r\n                    <>\r\n                    <hr/>\r\n                    <br/>\r\n                    <p className=\"container\"><b>Weather</b></p>\r\n                    <p className=\"header\"><b>{city}</b></p>\r\n                    <p>Temp : {temperatureC} &deg;C</p>\r\n                    <p>Temp : {temperatureF} &deg;F</p>\r\n                    {/* <img className='weather-icon' src={`http://opneweathermap.org/img/w/${icon}.png`} /> */}\r\n                    </>\r\n                )\r\n            }\r\n            else{\r\n                return(\r\n                    <div>Loading...</div>\r\n                )\r\n            }\r\n        }\r\n};\r\n\r\nexport default GeoLocation","import React, { useState } from \"react\";\r\nimport \"./Sidebar.css\";\r\nimport SidebarOption from \"./partials/SidebarOption\";\r\nimport Player from \"../Player\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\n// import SearchIcon from \"@material-ui/icons/Search\";\r\nimport LibraryMusicIcon from \"@material-ui/icons/LibraryMusic\";\r\nimport { useDataLayerValue } from \"../../data/DataLayer\";\r\nimport GeoLocation from \"../../weather/GeoLocation\";\r\nimport StripeCheckout from \"react-stripe-checkout\";\r\n\r\nfunction Sidebar({ spotify }) {\r\n  const [{ playlists }] = useDataLayerValue();\r\n\r\n  // Stripe\r\n  const { product, setProduct } = useState({\r\n    name: \"Monthly Subscription\",\r\n    price: 219,\r\n    productBy: \"Spotify\",\r\n  });\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <img\r\n        className=\"sidebar_logo\"\r\n        src=\"https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg\"\r\n        alt=\"\"\r\n      />\r\n      <SidebarOption title=\"Home\" Icon={HomeIcon} Component={Player} />\r\n      {/* <SidebarOption title=\"Search\" Icon={SearchIcon} /> */}\r\n      <SidebarOption title=\"Your Library\" Icon={LibraryMusicIcon} />\r\n\r\n      <br />\r\n      <strong className=\"sidebar__title\">Playlists</strong>\r\n      <hr />\r\n\r\n      {playlists?.items?.map((playlist) => {\r\n        return (\r\n          <SidebarOption\r\n            spotify={spotify}\r\n            title={playlist.name}\r\n            id={playlist.id}\r\n            key={playlist.id}\r\n          />\r\n        );\r\n      })}\r\n\r\n      <GeoLocation />\r\n      <StripeCheckout stripeKey=\"\" token=\"\" name=\"Payment\">\r\n        <button className=\"Premium\">Go Premium</button>{\" \"}\r\n      </StripeCheckout>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\n// import './search-box.styles.css';\r\n\r\nconst SearchBox = ({placeholder, handleChange}) => (\r\n    <input\r\n        className = 'search'\r\n        type=\"search\"\r\n        placeholder={placeholder}\r\n        onChange={handleChange}\r\n    />  \r\n    \r\n)\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\nimport \"./Header.css\";\r\n// import SearchIcon from '@material-ui/icons/Search';\r\nimport SearchBox from \"../partials/SearchBox\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport { useDataLayerValue } from \"../../../data/DataLayer\";\r\nimport StripeCheckout from \"react-stripe-checkout\";\r\n\r\nfunction Header({ spotify }) {\r\n  const [{ user }] = useDataLayerValue();\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"header__left\">\r\n        {/* <SearchIcon /> */}\r\n        <SearchBox />\r\n        {/* <input\r\n                    placeholder='Search for Artists, Songs or Podcasts'\r\n                    type=\"text\"/> */}\r\n      </div>\r\n\r\n      <div className=\"header__right\">\r\n        <StripeCheckout stripeKey=\"\" token=\"\" name=\"Payment\">\r\n          <button className=\"pre\">Premium</button>{\" \"}\r\n        </StripeCheckout>\r\n\r\n        <Avatar src={user?.images[0]?.url} alt={user?.display_name} />\r\n        <h4>{user?.display_name}</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, {createContext, useContext, useReducer} from 'react';\r\n\r\nexport const SoundLayerContext = createContext();\r\n\r\nexport const SoundLayer = ({initialState, reducer, children}) => (\r\n    <SoundLayerContext.Provider value={useReducer(reducer, initialState)}>\r\n        {children}\r\n    </SoundLayerContext.Provider>\r\n);\r\n\r\nexport const useSoundLayerValue = () => useContext(SoundLayerContext);","import React from 'react'\r\nimport './SongRow.css'\r\nimport {useDataLayerValue} from '../../../data/DataLayer';\r\nimport {useSoundLayerValue} from '../../../data/SoundLayer';\r\n\r\nfunction SongRow({track}) {\r\n    const [{}, dispatch] = useDataLayerValue();\r\n    const [{playing, repeat}, soundDispatch] = useSoundLayerValue();\r\n\r\n    const changeTrack = (e, track) => {\r\n        dispatch({\r\n            type: 'SET_TRACK',\r\n            track: track\r\n        });\r\n\r\n        let wasPlaying = playing;\r\n        soundDispatch({\r\n            type: 'SET_PLAYING',\r\n            playing: false,\r\n        });\r\n\r\n        let audio = new Audio(track.preview_url);\r\n        audio.loop = repeat;\r\n        soundDispatch({\r\n            type: 'SET_AUDIO',\r\n            audio: audio\r\n        });\r\n\r\n        if(wasPlaying) {\r\n            soundDispatch({\r\n                type: 'SET_PLAYING',\r\n                playing: true,\r\n            });\r\n        }\r\n\r\n        document.title = `${track.name} · ${track.artists.map((artist) => artist.name).join(', ')}`\r\n    };\r\n    return (\r\n        <div className='songRow' onClick={(e) => changeTrack(e, track)}>\r\n            <img className='songRow__album' src={track.album.images[0].url} alt=''/>\r\n            <div className='songRow__info'>\r\n                <h1>{track.name}</h1>\r\n                <p>\r\n                    {track.artists.map((artist) => artist.name).join(', ')}\r\n                </p>\r\n                <p>\r\n                    {track.album.name}\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SongRow","import React from 'react'\r\nimport './Body.css'\r\nimport Header from \"./partials/Header\";\r\nimport {useDataLayerValue} from \"../../data/DataLayer\";\r\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\r\nimport PauseCircleFilledIcon from \"@material-ui/icons/PauseCircleFilled\";\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport SongRow from \"./partials/SongRow\";\r\nimport {useSoundLayerValue} from \"../../data/SoundLayer\";\r\n\r\nfunction Body({spotify}) {\r\n    const [{current_playlist, tracks, track}] = useDataLayerValue();\r\n    const [{playing, volume}, soundDispatch] = useSoundLayerValue();\r\n\r\n    const startPlaying = () => {\r\n        soundDispatch({\r\n            type: \"SET_PLAYING\",\r\n            playing: true\r\n        });\r\n        soundDispatch({\r\n            type: \"SET_VOLUME\",\r\n            volume: volume / 100\r\n        });\r\n    };\r\n\r\n    const stopPlaying = () => {\r\n        soundDispatch({\r\n            type: \"SET_PLAYING\",\r\n            playing: false\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"body\">\r\n            <Header spotify={spotify}/>\r\n            <div className=\"body__info\">\r\n                <img\r\n                    src={current_playlist ? current_playlist?.images[0].url : 'https://cdn.shortpixel.ai/client/to_webp,q_lossy,ret_img,w_250/https://www.hypebot.com/wp-content/uploads/2020/07/discover-weekly-250x250.png'}\r\n                    alt=\"\"/>\r\n                <div className=\"body__infoText\">\r\n                    <strong>Playlists</strong>\r\n                    <h2>{current_playlist?.name}</h2>\r\n                    <p>{current_playlist?.description}</p>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"body__songs\">\r\n                <div className=\"body__icons\">\r\n                    {playing ? <PauseCircleFilledIcon onClick={track ? stopPlaying : null}\r\n                                                      className='body__shuffle'/> :\r\n                        <PlayCircleFilledIcon onClick={track ? startPlaying : null} fontSize='large'\r\n                                              className='body__shuffle'/>}\r\n                    <FavoriteIcon fontSize='large'/>\r\n                    <MoreHorizIcon/>\r\n                </div>\r\n                {tracks?.items.map(track => {\r\n                    return <SongRow track={track.track} key={track.track.id}/>\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Body","import React from 'react'\r\nimport './Footer.css'\r\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\r\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\r\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\r\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\r\nimport RepeatIcon from '@material-ui/icons/Repeat';\r\nimport {Grid, Slider} from '@material-ui/core';\r\nimport PlaylistPlayIcon from '@material-ui/icons/PlaylistPlay';\r\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\r\nimport PauseCircleOutlineIcon from '@material-ui/icons/PauseCircleOutline';\r\nimport {useDataLayerValue} from \"../../data/DataLayer\";\r\nimport {useSoundLayerValue} from \"../../data/SoundLayer\";\r\n\r\nfunction Footer() {\r\n    const [{track, tracks}, dispatch] = useDataLayerValue();\r\n    const [{audio, playing, volume, repeat, shuffle}, soundDispatch] = useSoundLayerValue();\r\n\r\n\r\n    const startPlaying = () => {\r\n        soundDispatch({\r\n            type: \"SET_PLAYING\",\r\n            playing: true\r\n        });\r\n        soundDispatch({\r\n            type: \"SET_VOLUME\",\r\n            volume: volume / 100\r\n        });\r\n    };\r\n\r\n    const stopPlaying = () => {\r\n        soundDispatch({\r\n            type: \"SET_PLAYING\",\r\n            playing: false\r\n        });\r\n    };\r\n\r\n    const setRepeat = () => {\r\n        if(!repeat && shuffle) {\r\n            setShuffle();\r\n        }\r\n        soundDispatch({\r\n            type: \"SET_REPEAT\",\r\n            repeat: !repeat\r\n        });\r\n    };\r\n\r\n    const setShuffle = () => {\r\n        if(!shuffle && repeat) {\r\n            setRepeat();\r\n        }\r\n        soundDispatch({\r\n            type: \"SET_SHUFFLE\",\r\n            shuffle: !shuffle\r\n        });\r\n    };\r\n\r\n    const handleChange = (event, value) => {\r\n        soundDispatch({\r\n            type: \"SET_VOLUME\",\r\n            volume: value / 100\r\n        });\r\n    };\r\n\r\n    if(audio) {\r\n        audio.onended = () => {\r\n            if(shuffle) {\r\n                while(true) {\r\n                    let randomTrackNumber = Math.floor((Math.random() * tracks.items.length));\r\n                    let randomTrack = tracks.items[randomTrackNumber].track;\r\n                    if(track !== randomTrack) {\r\n                        dispatch({\r\n                            type: 'SET_TRACK',\r\n                            track: randomTrack\r\n                        });\r\n\r\n                        let wasPlaying = playing;\r\n                        soundDispatch({\r\n                            type: 'SET_PLAYING',\r\n                            playing: false,\r\n                        });\r\n\r\n                        let audio = new Audio(randomTrack.preview_url);\r\n                        audio.loop = repeat;\r\n                        soundDispatch({\r\n                            type: 'SET_AUDIO',\r\n                            audio: audio\r\n                        });\r\n\r\n                        if(wasPlaying) {\r\n                            soundDispatch({\r\n                                type: 'SET_PLAYING',\r\n                                playing: true,\r\n                            });\r\n                        }\r\n\r\n                        document.title = `${randomTrack.name} · ${randomTrack.artists.map((artist) => artist.name).join(', ')}`\r\n                        break\r\n                    }\r\n                }\r\n            }\r\n            if(!shuffle && !repeat) {\r\n                soundDispatch({\r\n                    type: 'SET_PLAYING',\r\n                    playing: false,\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"footer\">\r\n            <div className='footer__left'>\r\n                <img className='footer__albumLogo' src={track ? track.album.images[0].url : ''} alt=\"\"/>\r\n                <div className='footer__songInfo'>\r\n                    <h4>{track ? track.name : 'No song selected'}</h4>\r\n                    <p>{track ? track.artists.map((artist) => artist.name).join(\", \") : null}</p>\r\n                </div>\r\n            </div>\r\n            <div className='footer__center'>\r\n                <ShuffleIcon onClick={track? setShuffle : null} className={shuffle ? 'footer__green' : 'footer__icon'}/>\r\n                <SkipPreviousIcon className='footer__icon'/>\r\n                {playing ? <PauseCircleOutlineIcon onClick={track ? stopPlaying : null} fontSize='large'\r\n                                                   className='footer__icon'/> :\r\n                    <PlayCircleOutlineIcon onClick={track ? startPlaying : null} fontSize='large'\r\n                                           className='footer__icon'/>}\r\n                <SkipNextIcon className='footer__icon'/>\r\n                <RepeatIcon onClick={track? setRepeat : null} className={repeat ? 'footer__green' : 'footer__icon'}/>\r\n            </div>\r\n            <div className='footer__right'>\r\n                <Grid container spacing={2}>\r\n                    <Grid item>\r\n                        <PlaylistPlayIcon/>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <VolumeDownIcon/>\r\n                    </Grid>\r\n                    <Grid item xs>\r\n                        <Slider\r\n                            aria-labelledby=\"discrete-slider\"\r\n                            valueLabelDisplay=\"off\"\r\n                            onChange={handleChange}\r\n                            min={0}\r\n                            max={100}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer","import React from 'react'\r\nimport './Player.css'\r\nimport Sidebar from \"./sidebar/Sidebar\";\r\nimport Body from \"./body/Body\";\r\nimport Footer from \"./footer/Footer\";\r\n\r\nfunction Player({ spotify }) {\r\n    return (\r\n        <div className=\"player\">\r\n            <div className=\"player_body\">\r\n                <Sidebar spotify={ spotify } />\r\n                <Body spotify={ spotify } />\r\n            </div>\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Player;","import React, {useEffect} from 'react';\r\nimport Login from './login/Login';\r\nimport './App.css';\r\nimport {getAccessTokenFromUrl} from \"./spotify\";\r\nimport SpotifyWebApi from 'spotify-web-api-js';\r\nimport Player from \"./player/Player\";\r\nimport {useDataLayerValue} from './data/DataLayer';\r\n\r\nconst spotify = new SpotifyWebApi();\r\n\r\n\r\nfunction App() {\r\n\r\n    const [{token}, dispatch] = useDataLayerValue();\r\n\r\n    useEffect(() => {\r\n        const hash = getAccessTokenFromUrl();\r\n        window.location.hash = '';\r\n        const _token = hash['access_token'];\r\n\r\n        if (_token) {\r\n            dispatch({\r\n                type: \"SET_TOKEN\",\r\n                token: _token\r\n            });\r\n\r\n            spotify.setAccessToken(_token);\r\n            spotify.getMe().then(user => {\r\n                dispatch({\r\n                    type: 'SET_USER',\r\n                    user: user\r\n                })\r\n            });\r\n\r\n\r\n\r\n            spotify.getUserPlaylists().then((playlists) => {\r\n                dispatch({\r\n                    type: 'SET_PLAYLISTS',\r\n                    playlists: playlists,\r\n                })\r\n            });\r\n        }\r\n    }, []);\r\n    \r\n    return <div className=\"app\"> {token ? <Player spotify={spotify} /> : <Login/>}</div>;\r\n}\r\n\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","export const initialState = {\r\n    user: null,\r\n    playlists: [],\r\n    playing: false,\r\n    item: null,\r\n    current_playlist: null,\r\n    tracks: null,\r\n    track: null,\r\n    token: null,\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n    // Action -> type, [payload]\r\n    switch (action.type) {\r\n        case 'SET_USER':\r\n            return {\r\n                ...state,\r\n                user: action.user\r\n            };\r\n        case \"SET_TOKEN\": {\r\n            return {\r\n                ...state,\r\n                token: action.token\r\n            }\r\n        }\r\n        case \"SET_PLAYLISTS\": {\r\n            return {\r\n                ...state,\r\n                playlists: action.playlists\r\n            }\r\n        }\r\n        case 'SET_CURRENT_PLAYLIST': {\r\n            let currentPlaylist = null;\r\n            state.playlists.items.forEach(playlist => {\r\n                if(playlist.id === action.id) {\r\n                    currentPlaylist = playlist;\r\n                }\r\n            });\r\n            return {\r\n                ...state,\r\n                current_playlist: currentPlaylist\r\n            }\r\n        }\r\n        case 'SET_TRACKS': {\r\n            return {\r\n                ...state,\r\n                tracks: action.tracks\r\n            };\r\n        }\r\n        case 'SET_TRACK': {\r\n            return {\r\n                ...state,\r\n                track: action.track\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","export const soundInitialState = {\r\n    audio: null,\r\n    playing: false,\r\n    volume: 0.3,\r\n    repeat: false,\r\n    shuffle: false,\r\n};\r\n\r\nconst soundReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'SET_AUDIO':\r\n            return {\r\n                ...state,\r\n                audio: action.audio\r\n            };\r\n        case 'SET_PLAYING':\r\n            if(!action.playing) {\r\n                if(state.audio) {\r\n                    state.audio.pause();\r\n                }\r\n            } else {\r\n                if(state.audio) {\r\n                    state.audio.play();\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                playing: action.playing\r\n            };\r\n        case 'SET_VOLUME':\r\n            if(state.audio) {\r\n                state.audio.volume = action.volume;\r\n            }\r\n            return {\r\n                ...state,\r\n                volume: action.volume,\r\n            };\r\n        case 'SET_REPEAT':\r\n            if(state.audio) {\r\n                state.audio.loop = action.repeat;\r\n            }\r\n            return {\r\n                ...state,\r\n                repeat: action.repeat,\r\n            };\r\n        case 'SET_SHUFFLE':\r\n            if(state.audio) {\r\n                return {\r\n                    ...state,\r\n                    shuffle: action.shuffle\r\n                };\r\n            }\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default soundReducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {DataLayer} from \"./data/DataLayer\";\r\nimport reducer, {initialState} from \"./data/reducer\";\r\nimport {SoundLayer} from \"./data/SoundLayer\";\r\nimport soundReducer, {soundInitialState} from \"./data/soundReducer\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <DataLayer initialState={initialState} reducer={reducer}>\r\n            <SoundLayer initialState={soundInitialState} reducer={soundReducer}>\r\n                <App/>\r\n            </SoundLayer>\r\n        </DataLayer>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}